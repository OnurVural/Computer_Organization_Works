
CS 224 SEC3
N.ONUR VURAL
21902330


#----------------------------------------------------------------PART 3 START----------------------------------------------------------------------

# Program to find minimum, maximum, average values inside a given array
.text
# Begin by loading values into registers
	add     $t0, $zero, $zero # will be used for iteration (i)
	la	$t1, array
	lw	$t2, arrsize
	
	# helpers
	add	$t3, $zero, $zero # holding avg
	lw	$t4, 0($t1) # For max: $t4 = array[0]
	lw	$t5, 0($t1) # For min: $t4 = array[0]	
	add	$t6, $zero, $zero # used as a temp register
	
	
# Print the title
	li	$v0, 4
	la	$a0, title
	syscall	
	
# Processing array
while:
	beq	$t0, $t2, exit
	
	lw 	$t6, 0($t1)
	bgt	$t6, $t4, newMax
	cont:
	blt	$t6, $t5, newMin	
	cont2:
	# print mem-addr
	li $v0, 34
	add $a0, $zero, $t1
	syscall
	
	# print space
	li	$v0, 4
	la	$a0, space
	syscall
	
	# print item
	li $v0, 1
	lw $a0, 0($t1)
	syscall
	
	# print newline 
	li	$v0, 4
	la	$a0, newLine
	syscall
	
	add	$t3, $t3, $t6

	addi	$t0, $t0, 1 # i++
	addi	$t1, $t1, 4 # passing next index
j while 

newMax:
	move $t4, $t6
j cont

newMin:
	move $t5, $t6
j cont2


exit:
	div	$t3, $t2
	mflo	$t3
# print avg 
	li	$v0, 4
	la	$a0, avgPrompt
	syscall
	
	li	$v0, 1
	move	$a0, $t3
	syscall 

	li	$v0, 4
	la	$a0, newLine
	syscall
	
# print max
	li	$v0, 4
	la	$a0, maxPrompt
	syscall
	
	li	$v0, 1
	move	$a0, $t4
	syscall 

	li	$v0, 4
	la	$a0, newLine
	syscall

# print min
	li	$v0, 4
	la	$a0, minPrompt
	syscall
	
	li	$v0, 1
	move	$a0, $t5
	syscall 

	li	$v0, 4
	la	$a0, newLine
	syscall

# End program
	li	$v0, 10
	syscall

.data
array:		.word 3, 1, 5, 2, 4
arrsize:	.word 5
title:		.asciiz "Memory Address   Array Element\nPosition (hex)   Value(int)\n==============   ==============\n"
avgPrompt:	.asciiz "Average: "	
maxPrompt:	.asciiz "Maximum: "
minPrompt:	.asciiz "Minimum: "
newLine:	.asciiz "\n"
space:		.asciiz "        "
#----------------------------------------------------------------PART 3 END------------------------------------------------------------------------
#----------------------------------------------------------------PART 4 START----------------------------------------------------------------------
# Program that computes the mathematical formula A = (B + C *( D / C ) ) % B
.text
# input interface print
	li	$v0, 4
	la	$a0, WelcomeMsj
	syscall
#------------------------------		
# print prompt for B
	li	$v0, 4
	la	$a0, BPrompt
	syscall
# read B
	li	$v0, 5
	syscall
	move	$t0, $v0	  
#------------------------------
# print prompt for C
	li	$v0, 4
	la	$a0, CPrompt
	syscall
# read C
	li	$v0, 5
	syscall
	move	$t1, $v0
#------------------------------
# print prompt for D
	li	$v0, 4
	la	$a0, DPrompt
	syscall
# read D
	li	$v0, 5
	syscall
	move	$t2, $v0
#------------------------------
# Processsing data
# $t3 = D / C
	div	$t2, $t1
	mflo	$t3

# $t4 = C * $t3->(D / C)
	mult	$t1, $t3
	mflo	$t4
# $t5 = B + $t4 ->( C *(D / C)	)	
	add 	$t5, $t0, $t4
	 
# $t5 % B
	div	$t5, $t0	
	mfhi	$t5

# print result prompt
	li	$v0, 4
	la	$a0, resultPrompt
	syscall  
# print the result 
	li	$v0, 1
	move    $a0, $t5
	syscall
# end program
	li	$v0, 10
	syscall 
.data
WelcomeMsj:	.asciiz " Welcome to arithmatic expression calculator!\n->In order to evaluate A = (B + C*(D/C))% B please enter inputs...\n"
BPrompt:	.asciiz "Please enter B: "
CPrompt:	.asciiz "Please enter C: "
DPrompt:	.asciiz "Please enter D: "
resultPrompt:	.asciiz "The result of the expression (A) obtained from (B + C*(D/C))% B is: "
#----------------------------------------------------------------PART 3 END------------------------------------------------------------------------